#!/usr/local/bin/perl#**********************************************************************#* Program:      Hyperthread-LITE from Radiation                      *#* Module:       Administration Panel                                 *#* Version:      1.0                                                  *#* Author:       Andrew Cowan (icculus@radiation.com) for Radiation   *#* Date:         January 7, 1997                                      *#* Product Info: http://www.radiation.com/gizmos/htlite.html          *#*                                                                    *#* This program is the copyrighted property of Radiation, a venture   *#* of GlobalMedia Design. Any use of this program is subject to the   *#* the terms of the license agreement (LICENSE.TXT) included as part  *#* of this distribution archive. Any other uses are stictly           *#* prohibited without the written permission of GlobalMedia Design    *#* and all other rights are reserved.                                 *#*                                                                    *#* Support for this software is available only to registered users.   *#* For registration information, consult the REGISTER.TXT document    *#* included as part of this distribution archive, or visit the Gizmos *#* section of the Radiation website at:                               *#*                                                                    *#*                http://www.radiation.com/gizmos/                    *#*                                                                    *#**********************************************************************# ************************************************************************# Module Requirements Section # ************************************************************************require 'radthread-utils.pl';require 'radthread-msgs.pl';require 'radthread-admin.pl';require 'radthread-headers.pl';# ************************************************************************# Main Routine# ************************************************************************print "Content-type: text/html \n\n";  # Send content type to browser&cgiparse;              # Parse the form fields (if any)&startup;               # Assign variables from the form fields&get_date;              # Get the date and convert from military format &load_areas;            # Load the areas list from the database&admin_interpret;exit(0);                # Time to go to bed# ************************************************************************# Subroutines Section# ************************************************************************# ************************************************************************# Startup - Assign form fields to variables# ************************************************************************sub startup{   $mode = $elements{'mode'};   $submode = $elements{'submode'};   $mode =~ s/ /_/g;   $id = $elements{'id'};   $pwd = $elements{'pwd'};   $new_id = $elements{'new_id'};   $new_pwd = $elements{'new_pwd'};   $area = "general";   $msg = $elements{'msg'};   $new_area_name = $elements{'area_name'};   $new_area_desc = $elements{'area_desc'};   $message = $elements{'message'};   $new_name = $elements{'name'};   $new_email = $elements{'email'};   $new_subject = $elements{'subject'};   $new_message_body = $elements{'message_body'};}# ************************************************************************# Interpret - Check mode and perform appropriate action # ************************************************************************sub admin_interpret{   &check_pwd unless (!$mode);   if ($mode eq "MENU1"){      &maintain_handler;      #&print_header("Hyperthread Administration :: Main Panel");      #&print_main;      #&print_footer;   }elsif ($mode eq "Maintain"){      &maintain_handler;   }else{      &print_header("Hyperthread Administration :: Access Gateway");      &print_entry_form;      &print_footer;   }}# ************************************************************************# Urldecode Routines# ************************************************************************# Copyright & Disclaimer. (James Tappin)#       This set of routines may be freely distributed, modified and#       used, provided this copyright & disclaimer remains intact.#       This package is used at your own risk, if it does what you#       want, good; if it doesn't, modify it or use something else--but#       don't blame me. Support level = negligable (i.e. mail bugs but#       not requests for extensions)# ************************************************************************sub cgiparse {  if ($ENV{'REQUEST_METHOD'} eq "POST") {	read(STDIN, $data, $ENV{'CONTENT_LENGTH'});  }  elsif ($ENV{'REQUEST_METHOD'} eq "GET") {	$data = $ENV{'QUERY_STRING'};  }  else {	#	#  Bad request method report and exit.	#	&method_error;  }  %elements = &url_decode(split(/[&=]/,$data));  %elements;}sub method_error {  print "\nCGI Script Requires use of method POST or GET.\n";  exit;}sub url_decode {    foreach (@_) {        tr/+/ /;        s/%(..)/pack("c",hex($1))/ge;    }    @_;}# ************************************************************************# End of Radiation Hyperthread (Main Module)# ************************************************************************