#**********************************************************************#* Program:      Hyperthread-LITE from Radiation                      *#* Module:       Administration Utilities                             *#* Version:      1.0                                                  *#* Author:       Andrew Cowan (icculus@radiation.com) for Radiation   *#* Date:         January 7, 1997                                      *#* Product Info: http://www.radiation.com/gizmos/htlite.html          *#*                                                                    *#* This program is the copyrighted property of Radiation, a venture   *#* of GlobalMedia Design. Any use of this program is subject to the   *#* the terms of the license agreement (LICENSE.TXT) included as part  *#* of this distribution archive. Any other uses are stictly           *#* prohibited without the written permission of GlobalMedia Design    *#* and all other rights are reserved.                                 *#*                                                                    *#* Support for this software is available only to registered users.   *#* For registration information, consult the REGISTER.TXT document    *#* included as part of this distribution archive, or visit the Gizmos *#* section of the Radiation website at:                               *#*                                                                    *#*                http://www.radiation.com/gizmos/                    *#*                                                                    *#**********************************************************************# ************************************************************************# Module Subroutines Section# ************************************************************************# ************************************************************************# Print_Entry_Form - Print the entrance form to STDOUT# ************************************************************************sub print_entry_form{   print <<"EOF";<h4>This area is only accessible to the Hyperthread Administration. Toenter the administration panel please enter the administration ID andPassword below.</h4><p><center><form method="post" action="$cgi2_url"><input type="hidden" name="mode" value="MENU1"><input type="text" name="id" size="20"><input type="password" name="pwd" size="20"> <p><input type="submit" value=" Authorize Admittance "></form></center>EOF}  # ************************************************************************# Check_Pwd - Require valid administrator ID and Password# ************************************************************************sub check_pwd{   local($cpwd) = crypt($pwd, $pwd);   if (($id eq $TDB{'USER'}) && ($cpwd eq $TDB{'PASSWORD'})) { return; }   &print_header("Administration :: Access Denied");   print <<"EOF";<center><h3>Administration Panel :: Access Denied</h3></center><p><hr><p><h4>This area is for administrators only, your ID and Password didnot match that of the registered administrator, access denied!</h4>EOF   &print_footer;   exit(0);} # ************************************************************************# Send_Missing - Send back if something missing # ************************************************************************ sub send_missing{   local($missing) = $_[0];   print <<"EOF";<h4>Your request cannot be processed because the following fieldswere left blank: <em>$missing</em>. Please complete the form andre-submit.</h4><hr>EOF}# ************************************************************************# Maintain_Handler - Determine how to handle mode for maintenance# ************************************************************************sub maintain_handler{   &load_messages($area);   if ($submode eq ""){      &print_header("Area Maintenance");      &print_main2;      &print_footer;   }elsif ($submode =~ /Expire/){      &do_expire;   }elsif ($submode =~ /Delete/){      &print_header("Message Deletion Confirmation");      print "<center><h4>";      if ($status{$msg} =~ /ORIG/){         print "<em>Warning: This message is the parent of a thread, " .               "deleting it will remove the entire thread!</em><br>";      }      print "<form method=\"post\" action=\"$cgi2_url\">" .            "Delete message number $msg, Are you sure? " .            "<input type=\"hidden\" name=\"mode\" value=\"Maintain\">" .            "<input type=\"hidden\" name=\"area\" value=\"$area\">" .            "<input type=\"hidden\" name=\"msg\" value=\"$msg\">" .            "<input type=\"hidden\" name=\"id\" value=\"$id\">" .            "<input type=\"hidden\" name=\"pwd\" value=\"$pwd\">" .            "<input type=\"submit\" name=\"submode\" value=\"Yes\">" .            "<input type=\"submit\" name=\"submode\" value=\"No\">" .            "</h4></form></center><p><hr>";      &print_main2;      &print_footer;   }elsif ($submode eq "No"){      &print_header("Message NOT Deleted");      print "<center><h4>Message number <em>$msg</em> has not been deleted</h4>" .            "</center><p><hr>";      &print_main2;      &print_footer;   }elsif ($submode eq "Yes"){      &do_delete;   }elsif ($submode eq "Edit"){      &print_message_form;   }elsif ($submode eq "Edit_Message"){      &do_edit;   }   exit(0);}# ************************************************************************# Print_Main2 - Print the maintenance menu to STDOUT# ************************************************************************sub print_main2{   local(%stat_msg);   %stat_msg = ("ORIG", "Original", "REPLY", "Reply", "EXPIRED:ORIG",                "Expired", "EXPIRED:REPLY", "Expired");   print "<center><h3>Area '<em>$area</em>' Maintenance</h3></center>";   if ($first_message_num eq "NONE"){      print "<center><h4>There are no messages posted to this area.</h4>" .            "</center><p>";      return;   }    print "<table border=0 width=100%>" .         "<tr><th>Msg #</th><th>Status</th>" .         "<th>Message Header</th><th>Actions</th></tr>";   foreach $msg_num (@message_nums){      $msg_url = $cgi_url . "?mode=MSG&message=$msg_num&" .                 "back=ADMIN&id=$id&pwd=$pwd";      print "<tr><td nowrap width=2%>$msg_num</td>" .            "<td nowrap width=3% align=center>$stat_msg{$status{$msg_num}}</td>" .            "<td width=70% align=center>";      print "<b><a href=\"$msg_url\">$subject{$msg_num}</b></a> \n" .            "(<font size=-1><a href=\"mailto:$email{$msg_num}\">" .            "$name{$msg_num}</a></font>) $date{$msg_num}";      local($exp_msg);      if ($status{$msg_num} =~ /EXPIRED/){         $exp_msg = "Un-Expire";      }else{         $exp_msg = "    Expire    ";      }       print "</td><td nowrap width=25% align=center>" .            "<form method=\"post\" action=\"$cgi2_url\">" .            "<input type=\"hidden\" name=\"mode\" value=\"Maintain\">" .            "<input type=\"hidden\" name=\"id\" value=\"$id\">" .            "<input type=\"hidden\" name=\"pwd\" value=\"$pwd\">" .            "<input type=\"hidden\" name=\"area\" value=\"$area\">" .            "<input type=\"hidden\" name=\"msg\" value=\"$msg_num\">" .            "<input type=\"submit\" name=\"submode\" value=\"Edit\"> " .            "<input type=\"submit\" name=\"submode\" value=\"$exp_msg\"> " .            "<input type=\"submit\" name=\"submode\" value=\"Delete\">" .            "</form>";      print "</td></tr>";   }   print "</table>";}# ************************************************************************# Do_Expire - Handle expiration stuff# ************************************************************************sub do_expire{   local($exp_mode);   local($this_db) = $db_dir . "/" . $area;    dbmopen(%DB, $this_db, 0666);   if ($status{$msg} !~ /^EXPIRED:\S+/){      $status{$msg} = "EXPIRED:$status{$msg}";       $exp_mode = "Expired";   }else{      $status{$msg} =~ s/^EXPIRED:(\S+)/$1/;       $exp_mode = "Unexpired";   }   $DB{$msg} = $status{$msg} . "\t" . $thread_start{$msg} .               "\t" . $parent{$msg} . "\t" . $date{$msg} .                "\t" . $name{$msg} . "\t" . $email{$msg} .                "\t" . $subject{$msg} . "\t" . $message{$msg} . "\n";   dbmclose(DB);    &print_header("Expiration Toggled");     print "<center><h4>Message number $msg has been set to '<em>$exp_mode</em>'" .         "</h4></center><p><hr>";   &print_main2;   &print_footer; }# ************************************************************************# Do_Delete - Handle deletion of a message and all of its children# ************************************************************************sub do_delete{   local($this_db) = $db_dir . "/" . $area;   dbmopen(%DB, $this_db, 0666);   foreach $msg_num (@message_nums){      if ($status{$msg} =~ /ORIG/){         delete($DB{$msg_num}) if $thread_start{$msg_num} == $msg;      }elsif ($status{$msg} =~ /REPLY/){         delete($DB{$msg_num}) if (($parent{$msg_num} == $msg) || ($msg_num == $msg));      }else{         print "<h1>Error! Message neither a reply nor original!?!?";      }   }   dbmclose(DB);   &load_messages($area);   &print_header("Message Deleted");   print "<center><h4>Message number $msg and any descendants have been " .         "deleted</h4></center><p><hr>";   &print_main2;   &print_footer;}# ************************************************************************# Print_Message_Form - Print message editing form to STDOUT# ************************************************************************sub print_message_form{   $new_name = $name{$msg} if $new_name eq "";   $new_email = $email{$msg} if $new_email eq "";   $new_subject = $subject{$msg} if $new_subject eq "";   $new_message_body = $orig_message{$msg} if $new_message_body eq "";   $new_message_body =~ s/`~`/\n/g;   &print_header("Message Editing");   print "<center><h3>Editing message number <em>$msg</em></h3></center>";   print <<"EOF";<form method="post" action="$cgi2_url"><input type="hidden" name="id" value="$id"><input type="hidden" name="pwd" value="$pwd"><input type="hidden" name="area" value="$area"><input type="hidden" name="msg" value="$msg"><input type="hidden" name="mode" value="Maintain"><input type="hidden" name="submode" value="Edit_Message"><ul><input type="text" name="name" value="$new_name" size="35"> Poster's Name<br><input type="text" name="email" value="$new_email" size="35"> Poster's Email Address<br><input type="text" name="subject" value="$new_subject" size="35"> Message Subject<br><textarea name="message_body" rows="15" cols="50">$new_message_body</textarea></ul><center><input type="submit" value=" Edit Message "></center></form>EOF   &print_footer;}# ************************************************************************# Do_Edit - Perform individual message editing# ************************************************************************sub do_edit{   local($this_db) = $db_dir . "/" . $area;   $new_message_body =~ s///g;   $new_message_body =~ s/\n/`~`/g;   $new_message_body =~ s/\t/    /g;   dbmopen(%DB, $this_db, 0666);   $DB{$msg} = $status{$msg} .                    "\t" . $thread_start{$msg} .                   "\t" . $parent{$msg} . "\t" . $date{$msg} .                    "\t" . $new_name . "\t" . $new_email .                    "\t" . $new_subject . "\t" . $new_message_body;   dbmclose(DB);    &load_messages($area);   &print_header("Message Edited");   print "<center><h4>Message number $msg has been edited</h4></center>" .         "<p><hr>";   &print_main2;   &print_footer;}# ************************************************************************1;  # Must return a true value to be required!# ************************************************************************# End of Module: Administration # ************************************************************************