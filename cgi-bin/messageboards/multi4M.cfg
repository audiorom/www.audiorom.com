#!/usr/local/bin/perl##################################################################### multi4M.cfg - include file for Multi4M, Admin4M and Archiv4M# Copyright 1996 by Innergy Inc.# # All forums must reside under a common root, $homepath, # that contains the forum registry ('regfile') and this # configuration file. # Absolute path from server root	$homepath = "/webspace/audiorom.com/www/messageboards";# Equivalent URL    $homeURL = "http://www.mydomain.com/messageboards";# Filename of main message board	$bb_file = "index.html";# Name of directory for current messages	$msgdir = "msg";# Name of directory for archived messages# and associated files	$arcdir = "arc";# File extension for msg files	$ext = "html";# Persistent storage of next msgnum	$msgCountFile = 'seq.dat';# Forum registry 	$regfile = 'reg.dat';	# Names of forum gateway programs	$cgiDir = '/cgi-bin/messageboards';	$adminProg = 'admin4M.cgi';	$forumProg = 'multi4M.cgi';	$archivProg = 'archiv4M.cgi';# Miscellaneous globals	$sep = '::';				# separator for registry records	$shiboleth = 'passwd.dat';	$MinPasswdLength = 4;	$rollbackExt = "prev";		# extension of previous forum file	$MsgBakExt = "bak";			# extension of previous msg file 	$addrListExt = "lst";		# mailing list file extension	$NO_INPUT = 0;	$MAX_MSGNUM = 99999;############################################################################### Change text colors below##############################################################################	$MSG_BGCOLOR = '#FFFFCC'; # color scheme for posted messages, all forums	$MSG_TEXT = '#000066';	$MSG_LINK = '#0000FF';	$MSG_VLINK = '#0000CC';	$MSG_ALINK = '#FF0033';	#	$BB_BGCOLOR = '#FFFF99';#	$BB_TEXT = '#000066';#	$BB_LINK = '#0000FF';#	$BB_VLINK = '#0000CC';#	$BB_ALINK = '#FF0033';	$CONSOLE_BGCOLOR = '#FFCCCC'; # color scheme for Admin Console	$CONSOLE_TEXT = '#000066';	$CONSOLE_LINK = '#0000FF';	$CONSOLE_VLINK = '#0000CC';	$CONSOLE_ALINK = '#FF0033';############################################################################### Form-embedded vars loaded at run-time#	'bb_id' is a unique identifier composed as follows:#		"$bb_dir" . "$sep" . "$bb_name"#	'bb_dir' is the subpath to a specific forum rel. to  #		$homepath, e.g., 'exchange' or 'forums/main'#   'bb_name' is the forum name, e.g., "Job Postings"# 		used in <H1> header and buttonBar#	'allowTags' turns processing of HTML in msg body #		on [1] or off [0]sub parseForm {#-----------------------------------------# Read name-value pairs from STDIN into %FORM#-----------------------------------------   local( $name, $value, $buffer );   read(STDIN, $buffer, $ENV{'CONTENT_LENGTH'});   foreach ( split(/&/, $buffer) ) {      ($name, $value) = split(/=/);      # Un-Webify plus signs and %-encoding      $value =~ tr/+/ /;      $value =~ s/%([a-fA-F0-9][a-fA-F0-9])/pack("C", hex($1))/eg;      $FORM{$name} = $value;   }   return($ENV{'CONTENT_LENGTH'});}sub getDate {# ------------------------------------------# Make time/date stamp using localtime()# ------------------------------------------   local( $millenium ) = '19';   local( @days ) = ('Sunday','Monday','Tuesday','Wednesday','Thursday',   		'Friday','Saturday');   local( @months ) = ('January','February','March','April','May','June',        'July','August','September','October','November','December');   # Call system for time   ($sec,$min,$hour,$mday,$mon,$year,$wday) = localtime(time);   # Avoid Y2000 problem   if ($year > 70) { $millenium = '20'; }      $today = "$days[$wday], $months[$mon] $mday, $millenium$year";   $longDate = "$months[$mon] $mday, 19$year at $hour\:$min\:$sec";   $month = ($mon + 1);   $date = "$month/$mday/$year";   if ($timeStyle == 1) {   # Prepend leading zeroes to single-digit fields	   if ($hour < 10) { $hour = "0$hour"; }	   if ($min < 10) { $min = "0$min"; }	   if ($sec < 10) { $sec = "0$sec"; }	   $date .= " $hour\:$min\:$sec";   }   chop($date) if ($date =~ /\n$/);}sub mkHead {   local( $title, $base ) = @_;       local( $FH ) = ($#_ > 1) ? $_[2] : 'STDOUT';   print $FH "<html><head>\n";   print $FH "   <title>$title</title>\n";   print $FH "   <base href=\"$base\">\n";   print $FH "</head>\n\n";}sub stripHTML {    $_[0] =~ s/<([^>]|\n)*>//g;   # remove tags}